import"./constants-D2DsSXG6.js";import"./header-BX0fN-_f.js";import{c as te,f as ae,d as B,a as T,b,g as I,s as D,e as m,l as P}from"./constants-DNmD6dpJ.js";let oe=new URLSearchParams(location.search),$=oe.get("id"),p,a,ie=await te();if(ie===!0){let i=await ae();i&&(p=i,p.user.user_type==="company"?document.querySelector(".not-found").textContent="This job does not exist or is no longer available.":p.user.user_type==="job_seeker"&&document.querySelector(".interview-questions").remove())}let se=document.querySelector(".job-message.not-found"),K=document.querySelector(".job-message.failed"),le=document.querySelector(".job");async function U(i=`${B}/${T}/jobs/${$}`,_){let n=await fetch(i,{headers:{Authorization:`Bearer ${await I()}`}});if(n.status==200){le.classList.add("active"),a=await n.json();let f,c,h=/\sat\s/i;if((a.company_id==1||a.company_id==2)&&h.test(a.title)){let C=a.title.split(h);f=C[0],c=C[1]}let q=document.querySelector(".job-title .value"),w=document.querySelector(".post-date .value"),g=document.querySelector(".company-name .value"),j=document.querySelector(".location .country"),S=document.querySelector(".location .city"),L=document.querySelector(".vacancies .value"),r=document.querySelector(".employment-type .value"),k=document.querySelector(".job-type .value"),s=document.querySelector(".workplace .value"),u=document.querySelector(".job-description .value"),y=document.querySelector(".job-requirements .value"),v=`${a.position_type[0].toUpperCase()}${a.position_type.slice(1)}`,d=`${a.job_type.split(" ")[0][0].toUpperCase()}${a.job_type.split(" ")[0].slice(1)} ${a.job_type.split(" ")[1][0].toUpperCase()}${a.job_type.split(" ")[1].slice(1)}`,E=`${a.work_place[0].toUpperCase()}${a.work_place.slice(1)}`;E==="Onsite"&&(E="On-site");let A=new Date(a.posted_date),x=timeago.format(A);document.title=a.title,q.textContent=f||a.title,w.textContent=x,g.textContent=c||a.company,j.textContent=a.location_country,S.textContent=a.location_city,L.textContent=a.number_of_vacancies,r.textContent=v,k.textContent=d,s.textContent=E,u.textContent=a.description,y.textContent=a.requirements,p.user.user_type==="job_seeker"?a.applied?(document.querySelector(".applied").classList.add("active"),b()):await ce():p.user.user_type==="company"&&(a.company_id==p.id||a.company==p.id)?_||await re():(document.querySelector(".interview-questions").remove(),b())}else n.status==404?(se.classList.add("active"),b()):n.status==401?await D()===!0?await U():(K.classList.add("active"),b()):(K.classList.add("active"),b());return a}await U();let ne=document.querySelector(".go-back");ne.addEventListener("click",()=>{location.href="../home/home.html"});async function ce(){let i=document.querySelector(".apply"),_=document.querySelector(".application .close"),n=document.querySelector(".application"),f=document.querySelector(".application-form"),c=document.getElementById("resume"),h=document.querySelector(".application-form .upload-resume"),q=document.querySelector(".application-form .resume .details"),w=document.querySelector(".application-form .resume .details .file-name"),g=document.querySelector(".application-form .resume .details .file-size"),j=document.querySelector(".application-form .resume .not-valid"),S=document.querySelector(".overlay");i.classList.add("active");async function L(){let s=new FormData,u=Object.keys(p);for(let d of u)if(d==="user"){let E=Object.keys(p[d]);for(let A of E)s.append(`user.${A}`,p.user[A])}else d==="resume"?s.append(`${d}`,c.files[0]):s.append(`${d}`,p[d]);P();let y=await fetch(`${B}/${T}/jobs/${$}/application`,{method:"POST",headers:{Authorization:`Bearer ${await I()}`},body:s});b();let v=await y.json();y.status==201?m("success",n,"You have successfully applied for the job.","Please wait until you are contacted.",void 0,!0):y.status==400?m("failed",n,"The job application was not submitted successfully",void 0,v):y.status==401?await D()===!0?await L():m("failed",n,"Something went wrong","We're sorry about that. Please try again."):m("failed",n,"Something went wrong","We're sorry about that. Please try again.")}function r(s){return s?s.type==="application/pdf"&&s.size<=2e6:!1}function k(s){let u;return s<1e3?u=`${s} Byte`:s>=1e3&&s<1e6?u=`${(s/1e3).toFixed(2)} KB`:u=`${(s/1e6).toFixed(2)} MB`,u}c.addEventListener("input",()=>{j.classList.remove("active"),w.textContent=c.files[0].name,g.textContent=k(c.files[0].size),q.classList.add("active")}),h.addEventListener("click",()=>{c.click()}),f.addEventListener("submit",async s=>{s.preventDefault(),s.submitter.tagName!=="BUTTON"&&(r(c.files[0])?await L():j.classList.add("active"))}),i.addEventListener("click",()=>{n.classList.add("active"),S.classList.add("active"),_.addEventListener("click",()=>{n.classList.remove("active"),S.classList.remove("active")})})}async function re(){let i=await U(`${B}/${T}/company/me/jobs/${$}`,!0);document.querySelector(".company-name").remove();let _=document.querySelector(".interview-questions .value"),n=i.interview_questions;n.forEach((e,t)=>{let l=`<div class="question-container">
    <h3 class="title">Question ${t+1}</h3>
    <p class="question">Question: ${e.question}</p>
    <p class="answer">Answer: ${e.answer}</p>
    </div>`;_.insertAdjacentHTML("beforeend",l)});let f=document.querySelectorAll(".view-mode"),c=document.querySelectorAll(".edit-mode"),h=document.querySelector(".options"),q=document.querySelector(".edit"),w=document.querySelector(".delete"),g=document.querySelector(".close-editing"),j=document.querySelector(".save");q.classList.add("active"),w.classList.add("active");let S=document.querySelector(".delete-job-message .yes"),L=document.querySelector(".delete-job-message .no"),r=document.querySelector(".delete-job-message");async function k(e){P();let t=await fetch(`${B}/${T}/company/me/jobs/${e}`,{method:"DELETE",headers:{Authorization:`Bearer ${await I()}`}});b(),t.status==204?(r.classList.remove("active"),m("success",void 0,"The job has been successfully deleted","Thank you for using MedLinker. We are happy to serve you.",void 0,void 0,"../home/home.html")):t.status==401?await D()===!0?await k(e):m("failed",r,"Something went wrong","We're sorry about that. Please try again."):t.status==404?m("failed",r,"This job does not exist","Please reload the page."):m("failed",r,"Something went wrong","We're sorry about that. Please try again.")}async function s(e){let t=document.querySelector(".overlay");r.classList.add("active"),t.classList.add("active"),r.querySelector(".close").addEventListener("click",()=>{r.classList.remove("active"),t.classList.remove("active")}),L.addEventListener("click",()=>{r.classList.remove("active"),t.classList.remove("active")}),S.addEventListener("click",async()=>{r.classList.remove("active"),await k(e)})}w.addEventListener("click",()=>{s($)}),q.addEventListener("click",x),g.addEventListener("click",C);let u=document.querySelector(".job .interview-questions .edit-mode"),y=[...document.querySelectorAll(".job input:not([type=submit])"),...document.querySelectorAll(".job select"),...document.querySelectorAll(".job textarea")],v=0;function d(e,t){v++;let l=`<div class="question-row">
              <div class="question">
                <input
                  type="text"
                  name="interview-questions"
                  data-type="question"
                  id="question${v}"
                  placeholder="Add Question"
                  ${e?`value="${e}"`:""}
                  />
                  <input
                  type="text"
                  name="interview-questions"
                  data-type="answer"
                  id="answer${v}"
                  placeholder="Add Answer"
                  ${t?`value="${t}"`:""}
                />
              </div>
              ${v===1?'<i class="add-question fa-solid fa-circle-plus"></i>':'<i class="remove-question fa-solid fa-circle-minus"></i>'}
            </div>`;u.insertAdjacentHTML("beforeend",l),y=[...document.querySelectorAll(".job input:not([type=submit])"),...document.querySelectorAll(".job select"),...document.querySelectorAll(".job textarea")]}document.addEventListener("click",e=>{e.target.classList.contains("add-question")?d():e.target.classList.contains("remove-question")&&(e.target.parentElement.remove(),y=[...document.querySelectorAll(".job input:not([type=submit])"),...document.querySelectorAll(".job select"),...document.querySelectorAll(".job textarea")])}),new URLSearchParams(location.search).get("edit")==="true"&&x();function x(){f.forEach(o=>{o.setAttribute("data-display",getComputedStyle(o).display),o.style.display="none"}),c.forEach(o=>{o.style.display="initial"}),document.getElementById("job-title").value=i.title,document.getElementById("country").value=i.location_country,document.getElementById("city").value=i.location_city,document.getElementById("vacancies").value=i.number_of_vacancies;let e=`${i.position_type[0].toUpperCase()}${i.position_type.slice(1)}`;document.getElementById("employment-type").value=e;let t=`${i.job_type.split(" ")[0][0].toUpperCase()}${i.job_type.split(" ")[0].slice(1)} ${i.job_type.split(" ")[1][0].toUpperCase()}${i.job_type.split(" ")[1].slice(1)}`;document.getElementById("job-type").value=t;let l=`${i.work_place[0].toUpperCase()}${i.work_place.slice(1)}`;l==="Onsite"&&(l="On-site"),document.getElementById("workplace").value=l,document.getElementById("description").value=i.description,document.getElementById("requirements").value=i.requirements,u.innerHTML="",n.forEach(o=>{d(o.question,o.answer)}),Array.from(h.children).forEach(o=>{o.classList.remove("active")}),g.classList.add("active"),j.classList.add("active")}function C(){f.forEach(e=>{e.getAttribute("data-display")?e.style.display=e.getAttribute("data-display"):e.style.display=getComputedStyle(e).display}),c.forEach(e=>{e.style.display="none"}),Array.from(h.children).forEach(e=>{e.classList.remove("active")}),q.classList.add("active"),w.classList.add("active"),v=0}function Y(e){let t={input:e,name:e.name};return e.type==="text"||e.tagName==="TEXTAREA"?e.value.length>0?t.result=!0:t.result=!1:e.type==="number"?e.value>0?t.result=!0:t.result=!1:e.tagName==="SELECT"&&(e.value==0?t.result=!1:t.result=!0),t}function M(e){let t=[];return e.forEach(o=>{t.push(Y(o))}),t.some(o=>o.result===!1)?t:!0}function X(e){let t=M(e),l=[];for(let o of t)o.result===!1&&l.push(o.input);l.forEach(o=>{o.classList.add("not-valid"),o.addEventListener("input",()=>{o.classList.remove("not-valid")})})}function G(){let e,t,l,o,V,J,O,Q,R,W;e=document.getElementById("job-title"),t=document.getElementById("employment-type"),l=document.getElementById("job-type"),o=document.getElementById("workplace"),V=document.getElementById("country"),J=document.getElementById("city"),O=document.getElementById("description"),Q=document.getElementById("requirements"),R=document.getElementById("vacancies"),W=u.querySelectorAll(".question-row");let F;o.value==="On-site"?F="onsite":F=o.value;let z=[];return W.forEach(H=>{let Z=H.querySelector("[data-type=question]").value.trim(),ee=H.querySelector("[data-type=answer]").value.trim();z.push({question:Z,answer:ee})}),{title:e.value.trim(),position_type:t.value.toLowerCase(),job_type:l.value.toLowerCase(),work_place:F.toLowerCase(),location_country:V.value.trim(),location_city:J.value.trim(),description:O.value.trim(),requirements:Q.value.trim(),number_of_vacancies:R.value,interview_questions:z}}async function N(e){P();let t=await fetch(`${B}/${T}/company/me/jobs/${e}`,{method:"PUT",headers:{Authorization:`Bearer ${await I()}`,"Content-Type":"application/json"},body:JSON.stringify(G())});b(),t.status==200?m("success",void 0,"The job has been successfully updated","Thank you for using MedLinker. We are happy to serve you.",void 0,void 0,"../home/home.html"):t.status==401?await D()===!0?await N($):m("failed",void 0,"Something went wrong","We're sorry about that. Please try again."):m("failed",void 0,"Something went wrong","We're sorry about that. Please try again.")}j.addEventListener("click",async()=>{M(y)===!0?await N($):(m("failed",void 0,"Incomplete data","Please ensure that you have entered all the required information."),X(y))})}b();
